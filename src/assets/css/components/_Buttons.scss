.btn-primary {
  color: #fff;
  &:hover{
    color: #fff;
  }
}
//- btn disabled
.btn {
  white-space: nowrap;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    color: $gray-600;
    cursor: not-allowed;
    &:hover {
      text-decoration: none;
    }
  }
  @each $color, $value in $theme-colors {
    &.btn-#{$color} {
      &.disabled,
      &:disabled {
        background-color: $gray-300;
        border-color: $gray-300;
      }
    }
  }
  @each $color, $value in $theme-colors {
    &.btn-outline-#{$color} {
      &.disabled,
      &:disabled {
        border-color: $gray-300;
      }
    }
  }
  .mdi:before {
    // 修正按鈕表單高度差1px
    line-height: 100%;
  }
  &[class*="border-"]{
    border-width: var(--bs-border-width);
  }
}
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none; //-230517修正
  &:focus{
    box-shadow: none;
  }
}

//- btn-hover
.btn-hover-container:hover,
.btn-hover-parent:hover,
tr:hover,
tr.active {
  .btn-hover,
  .btn-table-hover{
    @each $color, $value in $theme-colors {
      &.btn-#{$color},
      &.btn-outline-#{$color} {
        color: var(--#{$prefix}btn-color);
        background-color: var(--#{$prefix}btn-bg);
        border-color: var(--#{$prefix}btn-hover-border-color);
        @include button-variant($value, $value);
      }
    }
    &.btn.disabled,
    &.btn:disabled {
      background-color: $gray-300;
      border-color: $gray-300;
      color: $gray-600;
    }
    &.btn-opacity{
      opacity: 1;
      &.disabled,
      &.btn:disabled{
        opacity: 0.4;
      }
    }
  }
}

//- btn hover
.btn-hover-container:not(:hover),
tr:hover td .btn-hover-container:not(:hover),
tr.active td .btn-hover-container:not(:hover){
  &[btn-type="gray"] .btn.btn-hover:not(.disabled):not(:disabled),
  .btn.btn-hover:not(.disabled):not(:disabled).btn-hover.btn-gray-static{
    @extend .btn-gray-static;
  }
  &[btn-type="outline-gray"] .btn.btn-hover:not(.disabled):not(:disabled),
  .btn.btn-hover:not(.disabled):not(:disabled).btn-hover.btn-outline-gray-static{
      @extend .btn-outline-gray-static;
  }
  &[btn-type="dark"] .btn.btn-hover:not(.disabled):not(:disabled),
  .btn.btn-hover:not(.disabled):not(:disabled).btn-hover.btn-dark-static{
    @extend .btn-dark-static;
  }
  &[btn-type="transparent"] .btn.btn-hover,
  .btn.btn-hover.btn-transparent-static{
    @extend .btn-transparent-static;
  }
  &[btn-type="opacity"] .btn.btn-hover,
  .btn.btn-hover.btn-opacity{
    @extend .btn-opacity;
  }
}


.table-hover-btn{
  &[btn-type="gray"]{
    tbody tr:not(:hover) .btn:not(.disabled):not(:disabled){
      @extend .btn-gray-static;
    }
  }
  &[btn-type="outline-gray"]{
    tbody tr:not(:hover) .btn:not(.disabled):not(:disabled){
      @extend .btn-outline-gray-static;
    }
  }
  &[btn-type="dark"]{
    tbody tr:not(:hover) .btn:not(.disabled):not(:disabled){
      @extend .btn-dark-static;
    }
  }
  &[btn-type="transparent"]{
    tbody tr:not(:hover) .btn{
      @extend .btn-transparent-static;
    }

  }
  &[btn-type="opacity"]{
    tbody tr:not(:hover) .btn{
      @extend .btn-opacity;
    }
  }
  
}

//- static
.btn-gray-static {
  background-color: $gray;
  border-color: $gray;
  color: #fff;
}
.btn-dark-static {
  background-color: $dark;
  border-color: $dark;
  color: #fff;
}
.btn-outline-gray-static {
  border-color: $gray;
  color: $gray;
}
.btn-outline-dark-static {
  border-color: $dark;
  color: $dark;
}

//- transparen
.btn-transparent-static {
  background-color: transparent;
  border-color: transparent;
  color: $gray-600;
  &.btn.disabled,
  &.btn:disabled {
    background-color: transparent;
    border-color: transparent;
  }
}
.btn-opacity {
  opacity: 0;
  &.btn.disabled,
  &.btn:disabled {
    opacity: 0;
  }
}

//- ghost
.btn-ghost{
  border-color: transparent;
  &:hover{
    border-color: transparent;
    background: fade-out($primary,0.9);
  }
  &.disabled,
  &:disabled {
    border-color: transparent;
    &:hover{
      border-color: transparent;
      background:none;
    }
  }
  &:focus{
    border-color: transparent;
  }
}

//- halo
@each $color, $value in $theme-colors {
  .btn-halo-#{$color} {
    position: relative;
    z-index: 1;
    @include button-variant($value, $value);
    &:after{
      content:"";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius:$border-radius;
      box-shadow: 0 0 0 0 $value;
      opacity: 0.35;
      z-index: -1;
      perspective-origin: 0 0;
      animation-name: btnHalo;
      animation-duration: 1s;
      animation-iteration-count: infinite;
      animation-timing-function: ease-in; 
      background-color: $value;
      color: $value;
    }
    @keyframes btnHalo {
      0% {  
        box-shadow: 0 0 0 0 currentColor;
        opacity: 0.35;
      }
      100% {
        box-shadow: 0 0 0 0.7rem currentColor;
        opacity: 0;
      }
    }
  }
}

//- 根據母層的文字顏色自動變色，透過透明度來強化hover與否
.btn-inherit {
  color: inherit !important;
  opacity: 0.85;
  &:hover {
      opacity: 1;
  }
}
.btn-currentColor {
  color: currentColor !important;
  opacity: 0.85;
  &:hover {
      opacity: 1;
  }
}

//- btn-circle
.btn-circle {
  @extend .rounded-pill;
  padding-left: 0;
  padding-right: 0;
  text-align: center;
  width: $input-height;
  height: $input-height;
  &.btn-sm {
    width: $input-height-sm;
    height: $input-height-sm;
  }
  &.btn-lg {
    width: $input-height-lg;
    height: $input-height-lg;
  }
  &.btn-xlg {
    width: $input-height-xlg;
    height: $input-height-xlg;
  }
}


//- Btn loading
.btn.btn-loading {
  position: relative;
  pointer-events: none;
  cursor: default;
  overflow: hidden;
  &:after {
    content: "\F0772";
    @include IconMdi($display: flex);
    color: inherit;
    padding: 0 6px;
    animation: rotate 0.6s cubic-bezier(0.69, 0.01, 0.35, 1) infinite;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    justify-content: center;
    align-items: center;
  }
  &[class*="outline"]:after {
    color: $gray-500;
  }
  &:before {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    background: inherit;
    }
  &[class*="outline"]:before {
    background: #fff;
  }
}
  
@keyframes rotate {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}


//- Button type
.btn,.btn-custom{
  i.mdi + span{
    margin-left: 0.25rem;
  }
  &.btn-sm i.mdi + span{
    margin-left: 0.2rem;
  }
  &.btn-lg i.mdi + span{
    margin-left: 0.375rem;
  }
  &.btn-xlg i.mdi + span{
    margin-left: 0.375rem;;
  }
}
.btn-icon{
  width: $input-height;
  i.mdi{
    perspective-origin: 0 0;
    transform: scale(1.5, 1.5);
  }
  &.btn-sm{
    width: $input-height-sm;
    i.mdi{
      transform: scale(1.25, 1.25);
    }
  }
  &.btn-lg{
    width: $input-height-lg;
    i.mdi{
      transform: scale(1.65, 1.65);
    }
  }
  &.btn-xlg{
    width: $input-height-xlg;
    i.mdi{
      transform: scale(1.75, 1.75);
    }
  }
}

//- Button Size
.btn{
  min-height: $input-height;
}
.btn-sm {
  min-height: $input-height-sm;
}
.btn-lg {
  min-height: $input-height-lg;
}
.btn-xlg {
  @include button-size($btn-padding-y-xlg, $btn-padding-x-xlg, $btn-font-size-xlg, $btn-border-radius-lg);
  min-height: $input-height-xlg;
}

.btn-alert {
  position: relative;
  &:after {
    content: "";
    display: block;
    width: 8px;
    height: 8px;
    border-radius: 4px;
    background: $danger;
    position: absolute;
    top: 0;
    right: 0;
    transform: translate(50%, -50%);
    box-shadow: 0 0 0 2px #f5f6f8;
  }
}

//- 搭配 toggle 使用
.btn[toggle-class="on"]{
  color: var(--#{$prefix}btn-active-color);
  background-color: var(--#{$prefix}btn-active-bg);
  border-color: var(--#{$prefix}btn-active-border-color);
  @include box-shadow(var(--#{$prefix}btn-active-shadow));
}

//- 搭配 form-switch 使用
label.form-switch.btn,
label.form-check.btn{
  //- 未選
  padding-left: 0.5rem;
  border-color: $gray-800;
  color: $gray-800;
  @each $color, $value in $theme-colors {
    &.btn-outline-#{$color}{
      &:hover{
        color: shade-color($value, 50%);
        border-color: shade-color($value, 50%);
        background-color: tint-color($value, 80%);
      }
    }
  }
  //- 已選
  &:has(.form-check-input:checked){
    @each $color, $value in $theme-colors {
      &.btn-outline-#{$color} {
        @include button-variant($value, $value);
        // color: shade-color($value, 60%);
        // color: #fff;
        border-color: $value;
        span{
          color: var(--#{$prefix}btn-active-color);
        }
        .form-check-input:not(:invalid):checked{
          //- switch
          background-color: shade-color($value, 40%);
          border-color: shade-color($value, 50%);  
        }
        &:hover{
          color: var(--#{$prefix}btn-active-color);
          // color: #fff;
          border-color: tint-color($value, $btn-hover-bg-tint-amount);
          background-color: tint-color($value, $btn-hover-bg-tint-amount);
        }
      }
    }
  } 
}
